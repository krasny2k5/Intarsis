#!/bin/bash
# This program generates a mask to avoid unwrapping of low coherence pixels.
# This step is not mandatary but reduces computation time.
# usage: Intarsis_04_mask IW_number coherence_threshold
# example: Intarsis_04_mask F2 0.1

if [ -z $1 ]; then
	echo "Must specify IW and coherence threshold as parameter"
	echo "Example: Intarsis_04_mask F2"
	exit
elif [[ "$1" == "F1" ]] || [[ "$1" == "F2" ]] || [[ "$1" == "F3" ]]; then
	IW=$1
	echo "Selected $IW"
else
	echo "You must specify the IW as F1,F2 or F3"
	exit
fi

# Test coherence threshold
if [ -z $2 ];then
	echo "You must specify a coherence threshold"
	exit
elif [[ $(echo "$2 > 0" | bc -l) == 1 ]] && [[ $(echo "$2 < 1" | bc -l) == 1 ]];then
	COHER=$2
	echo "Coherence threshold set to $COHER" 
else
	echo "You must specify a coherence threshold between 0.001 and 0.999"
	exit
fi

echo "$(date "+%d/%m/%y %H:%M") - Run Mask generation $IW" >> Intarsis_stage

cd $IW
if [ ! -f corr_stack.grd ]; then
	ls intf_all/201*/corr.grd > corr.grd_list
	echo "Generating corr_stack.grd"	
	stack.csh corr.grd_list 1 corr_stack.grd std.grd
else
	echo "Detected previous corr_stack.grd"
	echo "If you want to remove previous corr_stack.grd remove the file from $IW folder"
fi
gmt grdmath corr_stack.grd $COHER GE 0 NAN = mask_def.grd

cd intf_all
for i in $(ls -d */); do
cd $i
rm mask_def.grd &> /dev/null
ln -s ../../mask_def.grd .
cd ..
done
