#!/bin/bash
##############################################################################
# This program generates a mask to avoid unwrapping of low coherence pixels. #
# This step is not mandatary but reduces computation time.                   #
# usage: Intarsis_04b_mask IW_number coherence_threshold                     #
# example: Intarsis_04b_mask F2 0.1                                          #
# also settings can be configured via intarsis.config                        #
# check mask_def.grd from the selected IW (ex: ncview FX/mask_def.grd)       #
##############################################################################

# Intarsis root folder check
if [ ! -f ".intarsis_folder" ]; then
        echo "You must run Intarsis_04b_mask inside a Intarsis root folder"
        echo "Run Intarsis_01_file_preparation and other routines first"
        exit
fi

# Import variables from intarsis.config
if [ -f "intarsis.config" ]; then
MERGE=$(grep merge_swaths intarsis.config | awk '{print $2}')
if $MERGE; then IW=merged; else IW=$(grep swath_number intarsis.config | awk '{print $2}' | tr '[:lower:]' '[:upper:]'); fi
COHER=$(grep mask_level intarsis.config | awk '{print $2}')
MASKING=$(grep use_mask intarsis.config | awk '{print $2}')
fi

if [ $MASKING = false ]; then
	echo "Coherence mask is disabled in intarsis.config"
	exit
fi

if [[ "$1" == "F1" ]] || [[ "$1" == "F2" ]] || [[ "$1" == "F3" ]]; then
	IW=$1
	IWN=$(echo $IW | cut -c 2)
	IW_config=false
elif [[ "$IW" == "F1" ]] || [[ "$IW" == "F2" ]] || [[ "$IW" == "F3" ]]; then
	IWN=$(echo $IW | cut -c 2)
	IW_config=true
elif [[ $1 == "merged" ]] || [[ $1 == "MERGED" ]]; then
	IW=merged
	IW_config=false
elif [[ $IW == "merged" ]]; then
	IW=merged
	IW_config=true
elif [ -z $1 ]; then
	echo "Must specify IW as parameters or configure it in intarsis.config"
	echo "Example: Intarsis_04b_mask F[1,2,3] 0.12"
	exit
else
	echo "You must specify the IW as F1, F2, F3 or merged and the coherence threshold for the mask"
	exit
fi

# Intarsis previous step check
if [ $IW == "merged" ]; then
	if [ ! -f ".intarsis_step04a" ]; then
        	echo "You must run Intarsis_04a_merge first"
        	exit
	fi
else
	if [ ! -f ".intarsis_step03_$IW" ]; then
        	echo "You must run Intarsis_03_interferograms first"
        	exit
	fi
fi

# Test coherence threshold
if [[ $(echo "$COHER > 0" | bc -l) == 1 ]] && [[ $(echo "$COHER < 1" | bc -l) == 1 ]];then
	COHER_config=true
elif [[ $(echo "$2 > 0" | bc -l) == 1 ]] && [[ $(echo "$2 < 1" | bc -l) == 1 ]];then
	COHER=$2
	COHER_config=false
else
	echo "You must specify a coherence threshold between 0.001 and 0.999"
	exit
fi

echo "$(date "+%d/%m/%y %H:%M") - Run Mask generation $IW" >> intarsis.log

echo "###################################################################"
echo "Intarsis masking parameters:"
if $IW_config; then
	echo "Swath to process: $IW (imported from intarsis.config)"
else
	echo "Swath to process: $IW (command line)"
fi

if $COHER_config; then
	echo "Correlation threshold: $COHER (imported from intarsis.config)"
else
	echo "Correlation threshold: $COHER (from command line)"
fi
echo "###################################################################"

cd $IW
if [ ! -f corr_stack.grd ]; then
	if [ $IW == "merged" ]; then
	ls 201*/corr.grd > corr.grd_list
	echo "Generating corr.grd_list"
	stack.csh corr.grd_list 1 corr_stack.grd std.grd
	else
	ls intf_all/201*/corr.grd > corr.grd_list
	echo "Generating corr_stack.grd"
	stack.csh corr.grd_list 1 corr_stack.grd std.grd
	fi
else
	echo "Detected previous corr_stack.grd"
	echo "If you want to remove previous corr_stack.grd remove the file from $IW folder"
	echo "Generating new mask with $COHER using old corr_stack.grd"
fi

gmt grdmath corr_stack.grd $COHER GE 0 NAN = mask_def.grd

# generating symbolic links in the interferogram folders:

if [ ! $IW == "merged" ]; then
cd intf_all
fi

for i in $(ls -d 20*/); do
cd $i
rm mask_def.grd &> /dev/null
if [ $IW == "merged" ]; then
ln -s ../mask_def.grd .
else
ln -s ../../mask_def.grd .
fi
cd ..
done

# Update log & create control files
cd ..
touch .intarsis_step04b_$IW &> /dev/null	# Intarsis step control file
echo "$(date "+%d/%m/%y %H:%M") - Finished Mask generation $IW" >> intarsis.log
